def func1(arg1, arg2):
    if arg2 < arg2:
        var7 = class2()
    else:
        var7 = class4()
    for var8 in func6(arg1, arg2):
        var50 = var7.func3
        var50(var8, arg2)
    var51 = ((arg2 + -1036435078 - (arg2 ^ arg1 & 610) - ((-870 & ((arg2 & arg2 ^ (arg2 - -1414678526 & 849063411 - arg2 ^ -40) ^ ((arg1 + arg1) & arg2)) - arg2 - -844)) + arg1)) ^ 61 - 945386046) | arg1
    var52 = (arg2 ^ (var51 | 145419982 | -1917515765 + arg2 + var51 ^ arg2 - arg1)) ^ 126222254
    if var52 < var51:
        var53 = 872303771 ^ arg1
    else:
        var53 = var52 & var51 | arg1
    result = 31 + (arg2 | arg1 - var51)
    return result
def func7(arg11, arg12):
    if arg11 < arg12:
        var17 = class8()
    else:
        var17 = class10()
    for var18 in [(i & arg12) ^ arg11 for i in [-9 ^ (arg11 | 2) for i in xrange(5)]]:
        var17.func9(var18, var18)
    var19 = (-88799747 ^ arg12 + arg12) - -390734043
    if arg12 < var19:
        var20 = (arg11 | -638356970) + var19
    else:
        var20 = (-323044591 | arg12) - var19
    var21 = (1832844767 & 1219493272) + 575
    var22 = -675219686 | arg12 ^ (var21 | arg12)
    var23 = var19 | ((var21 & var21) | arg11)
    if var19 < var21:
        var24 = -1706129075 ^ arg12 - var22 - var22
    else:
        var24 = arg12 & arg11 - 632
    var25 = (var19 ^ -1550380817 ^ 1586687108) - -203
    var26 = var21 - arg11 + arg11 ^ arg11
    var27 = arg11 & (arg12 + var25) | var25
    var28 = (var21 + -1393707196) - var21 + var23
    var29 = arg11 & var25
    var30 = var21 - (var22 - var25)
    var31 = (var28 | var26 - var21) - arg11
    var32 = var29 + var27
    var33 = ((arg12 & var26) | var21) & arg12
    var34 = (var21 | var32) ^ var31
    if var31 < var29:
        var35 = arg11 & var21 + var31
    else:
        var35 = (var32 ^ var25) ^ (var33 | var23)
    var36 = (var27 ^ var21) & -134 ^ var27
    var37 = (var30 | var36 & var29) - var31
    if arg11 < var36:
        var38 = var28 & (var27 | var36 & arg12)
    else:
        var38 = -483 & var26
    result = (((var21 ^ var25 ^ var28) + ((var32 ^ (arg11 + var21) | var28) & var26) - var26) + var32) | var26 | var29
    return result
class class10(object):
    def func9(self, arg15, arg16):
        return 0
class class8(object):
    def func9(self, arg13, arg14):
        result = -1 - (-1625796051 + ((((0 ^ arg14) + arg13) - 0) - 1))
        return result
def func6(arg9, arg10):
    var39 = func7(-699051359, 160)
    yield var39
    var40 = arg10 ^ (-822 ^ arg9)
    yield var40
    var41 = (arg10 | -27 | arg10) & arg10
    yield var41
    var42 = -1544743787 ^ var40
    yield var42
    var43 = -288 - arg9 | arg9 & 682
    yield var43
    var44 = arg9 + -169
    yield var44
    var45 = var44 - 258 & -968 & -2084078071
    yield var45
    var46 = var42 ^ -1844794841 & var44 + var40
    yield var46
    var47 = var42 ^ 832
    yield var47
    var48 = (var47 - var42 & arg10) | var41
    yield var48
    var49 = var47 - var40 - var48
    yield var49
class class4(object):
    def func3(self, arg5, arg6):
        return 0
class class2(class4):
    def func3(self, arg3, arg4):
        result = arg3 ^ -235521207 ^ 433615645
        return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 54'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
